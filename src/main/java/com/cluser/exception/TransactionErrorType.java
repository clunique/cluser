package com.cluser.exception;
import static com.cluser.exception.TransactionErrorDescription.*;

public enum TransactionErrorType {

    UNKNOWN_ERROR(UNKNOWN_ERROR_CODE, UNKNOWN_ERROR_DESC),
    UNKNOWN_OPENDJ_ERROR(UNKNOWN_OPENDJ_ERROR_CODE, UNKNOWN_OPENDJ_ERROR_DESC),
    INVALID_REQUEST_PARAM(INVALID_REQUEST_PARAM_ERROR_CODE, INVALID_REQUEST_PARAM_DESC),

    // Error about token, 10101xx d
    TOKEN_INVALID_ERROR(TOKEN_INVALID_ERROR_CODE, TOKEN_INVALID_ERROR_DESC),
    TOKEN_EXPIRED_ERROR(TOKEN_EXPIRED_ERROR_CODE, TOKEN_EXPIRED_ERROR_DESC),
    REQUEST_TOKEN_NOTFOUND(TOKEN_REQUEST_NOTFOUND_CODE, TOKEN_REQUEST_NOTFOUND_DESC),
    REQUEST_TOKEN_EXPIRED(TOKEN_REQUEST_EXPIRED_CODE, TOKEN_REQUEST_EXPIRRED_DESC),
    REQUEST_TOKEN_INVALID(TOKEN_REQUEST_INVALID_CODE, TOKEN_REQUEST_INVALID_DESC),
    
    // Error about user, 10102xx
    USER_NAME_PASSWORD_INCONSISTENT(USER_NAME_PASSWORD_INCONSISTENT_ERROR_CODE, USER_NAME_PASSWORD_INCONSISTENT_DESC),
    USER_NOT_FOUND(USER_NOT_FOUND_ERROR_CODE, USER_NOT_FOUND_DESC),
    USER_INVALID(USER_INVALID_ERROR_CODE, USER_INVALID_DESC),
    USER_ALREADY_EXISTS(USER_ALREADY_EXISTS_ERROR_CODE, USER_ALREADY_EXISTS_DESC),
    ILLEGAL_USER_ATTR_FOR_CREATE(ILLEGAL_USER_ATTR_FOR_CREATE_ERROR_CODE, ILLEGAL_USER_ATTR_FOR_CREATE_DESC),
    ILLEGAL_USER_ATTR_FOR_UPDATE(ILLEGAL_USER_ATTR_FOR_UPDATE_ERROR_CODE, ILLEGAL_USER_ATTR_FOR_UPDATE_DESC),
    USER_ATTR_UNKNOWN(USER_ATTR_UNKNOWN_ERROR_CODE, USER_ATTR_UNKNOWN_DESC),
    USER_ATTR_VALUE_INVALID(USER_ATTR_VALUE_INVALID_ERROR_CODE, USER_ATTR_VALUE_INVALID_DESC),
    USER_ATTR_MISSED(USER_ATTR_MISSED_ERROR_CODE, USER_ATTR_MISSED_DESC),

    // Error about organization, 10103xx
    ORG_INVALID_ID(ORG_INVALID_ID_ERROR_CODE, ORG_INVALID_ID_DESC),
    ORG_NOT_FOUND(ORG_NOT_FOUND_ERROR_CODE, ORG_NOT_FOUND_DESC),
    ORG_ALREADY_EXISTS(ORG_ALREADY_EXISTS_ERROR_CODE, ORG_ALREADY_EXISTS_DESC),
    ORG_ROOT_CANNOT_MODIFY(ORG_ROOT_CANNOT_MODIFY_ERROR_CODE, ORG_ROOT_CANNOT_MODIFY_DESC),
    ORG_NEED_CASCADE_DELETE(ORG_NEED_CASCADE_DELETE_ERROR_CODE, ORG_NEED_CASCADE_DELETE_DESC),
    ORG_ALREADY_HAS_USER(ORG_ALREADY_HAS_USER_ERROR_CODE, ORG_ALREADY_HAS_USER_DESC),
    ORG_HAS_NO_USER(ORG_HAS_NO_USER_ERROR_CODE, ORG_HAS_NO_USER_DESC),
    ORG_JOIN_ERROR(ORG_JOIN_ERROR_ERROR_CODE, ORG_JOIN_ERROR_DESC),
    ORG_LEAVE_ERROR(ORG_LEAVE_ERROR_ERROR_CODE, ORG_LEAVE_ERROR_DESC),
    ORG_NAME_CANNOT_BE_EMPTY(ORG_NAME_CANNOT_BE_EMPTY_ERROR_CODE, ORG_NAME_CANNOT_BE_EMPTY_DESC),
    
    // Error about user data schema, 10104xx
    USER_SCHEMA_NOT_FOUND(USER_SCHEMA_NOT_FOUND_CODE, USER_SCHEMA_NOT_FOUND_DESC),
    USER_SCHEMA_ATTR_EXIST(USER_SCHEMA_ATTR_EXIST_CODE, USER_SCHEMA_ATTR_EXIST_DESC),
    USER_SCHEMA_OBJECT_CALSS_NOT_EXIST(USER_SCHEMA_OBJECT_CALSS_NOT_FOUND_CODE, USER_SCHEMA_OBJECT_CALSS_NOT_FOUND_DESC),
    USER_SCHEMA_ATTR_NOT_FOUND(USER_SCHEMA_ATTR_NOT_FOUND_CODE, USER_SCHEMA_ATTR_NOT_FOUND_DESC),
    USER_SCHEMA_ATTR_DATA_TYPE_INVALID(USER_SCHEMA_ATTR_DATA_TYPE_INVALID_CODE,USER_SCHEMA_ATTR_DATA_TYPE_INVALID_DESC),
    USER_SCHEMA_ATTR_DATA_CAN_NOT_FORMAT(USER_SCHEMA_ATTR_DATA_CAN_NOT_FORMAT_CODE, USER_SCHEMA_ATTR_DATA_CAN_NOT_FORMAT_DESC),

    URL_RESOURCE_NOTFOUND(URL_RESOURCE_NOTFOUND_CODE, URL_RESOURCE_NOTFOUND_DESC),
    UNAUTHORIZED(UNAUTHORIZED_CODE, UNAUTHORIZED_DESC),
    INSUFFICIENT_PRIVILEGES(INSUFFICIENT_PRIVILEGES_CODE, INSUFFICIENT_PRIVILEGES_DESC),
    SELF_OPERATION_LIMIT(SELF_OPERATION_LIMIT_CODE, SELF_OPERATION_LIMIT_DESC);

    private int errorCode;
    private String desc;
    TransactionErrorType(int errorCode, String desc){
        this.errorCode = errorCode;
        this.desc = desc;
    }

    public String getDesc() {
        return desc;
    }
//
//    private void setDesc(String desc) {
//        this.desc = desc;
//    }

    public int getErrorCode() {
        return errorCode;
    }

//    private void setErrorCode(int errorCode) {
//        this.errorCode = errorCode;
//    }
}
